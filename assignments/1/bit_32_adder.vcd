$date
	Tue Jan 17 20:01:37 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module bit_32_adder_tb $end
$var wire 32 ! cout [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$scope module uut $end
$var wire 32 $ a [31:0] $end
$var wire 32 % b [31:0] $end
$var wire 33 & crr [32:0] $end
$var wire 32 ' cout [31:0] $end
$scope begin temp[0] $end
$var parameter 2 ( i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + cin $end
$var wire 1 , cout $end
$var wire 1 - crr $end
$var wire 1 . temp1 $end
$var wire 1 / temp2 $end
$var wire 1 0 temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[1] $end
$var parameter 2 1 i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 cin $end
$var wire 1 5 cout $end
$var wire 1 6 crr $end
$var wire 1 7 temp1 $end
$var wire 1 8 temp2 $end
$var wire 1 9 temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[2] $end
$var parameter 3 : i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 > cout $end
$var wire 1 ? crr $end
$var wire 1 @ temp1 $end
$var wire 1 A temp2 $end
$var wire 1 B temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[3] $end
$var parameter 3 C i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F cin $end
$var wire 1 G cout $end
$var wire 1 H crr $end
$var wire 1 I temp1 $end
$var wire 1 J temp2 $end
$var wire 1 K temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[4] $end
$var parameter 4 L i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O cin $end
$var wire 1 P cout $end
$var wire 1 Q crr $end
$var wire 1 R temp1 $end
$var wire 1 S temp2 $end
$var wire 1 T temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[5] $end
$var parameter 4 U i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 V a $end
$var wire 1 W b $end
$var wire 1 X cin $end
$var wire 1 Y cout $end
$var wire 1 Z crr $end
$var wire 1 [ temp1 $end
$var wire 1 \ temp2 $end
$var wire 1 ] temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[6] $end
$var parameter 4 ^ i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 a cin $end
$var wire 1 b cout $end
$var wire 1 c crr $end
$var wire 1 d temp1 $end
$var wire 1 e temp2 $end
$var wire 1 f temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[7] $end
$var parameter 4 g i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 h a $end
$var wire 1 i b $end
$var wire 1 j cin $end
$var wire 1 k cout $end
$var wire 1 l crr $end
$var wire 1 m temp1 $end
$var wire 1 n temp2 $end
$var wire 1 o temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[8] $end
$var parameter 5 p i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 s cin $end
$var wire 1 t cout $end
$var wire 1 u crr $end
$var wire 1 v temp1 $end
$var wire 1 w temp2 $end
$var wire 1 x temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[9] $end
$var parameter 5 y i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | cin $end
$var wire 1 } cout $end
$var wire 1 ~ crr $end
$var wire 1 !" temp1 $end
$var wire 1 "" temp2 $end
$var wire 1 #" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[10] $end
$var parameter 5 $" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 '" cin $end
$var wire 1 (" cout $end
$var wire 1 )" crr $end
$var wire 1 *" temp1 $end
$var wire 1 +" temp2 $end
$var wire 1 ," temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[11] $end
$var parameter 5 -" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 ." a $end
$var wire 1 /" b $end
$var wire 1 0" cin $end
$var wire 1 1" cout $end
$var wire 1 2" crr $end
$var wire 1 3" temp1 $end
$var wire 1 4" temp2 $end
$var wire 1 5" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[12] $end
$var parameter 5 6" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 7" a $end
$var wire 1 8" b $end
$var wire 1 9" cin $end
$var wire 1 :" cout $end
$var wire 1 ;" crr $end
$var wire 1 <" temp1 $end
$var wire 1 =" temp2 $end
$var wire 1 >" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[13] $end
$var parameter 5 ?" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 B" cin $end
$var wire 1 C" cout $end
$var wire 1 D" crr $end
$var wire 1 E" temp1 $end
$var wire 1 F" temp2 $end
$var wire 1 G" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[14] $end
$var parameter 5 H" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 I" a $end
$var wire 1 J" b $end
$var wire 1 K" cin $end
$var wire 1 L" cout $end
$var wire 1 M" crr $end
$var wire 1 N" temp1 $end
$var wire 1 O" temp2 $end
$var wire 1 P" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[15] $end
$var parameter 5 Q" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 R" a $end
$var wire 1 S" b $end
$var wire 1 T" cin $end
$var wire 1 U" cout $end
$var wire 1 V" crr $end
$var wire 1 W" temp1 $end
$var wire 1 X" temp2 $end
$var wire 1 Y" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[16] $end
$var parameter 6 Z" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 [" a $end
$var wire 1 \" b $end
$var wire 1 ]" cin $end
$var wire 1 ^" cout $end
$var wire 1 _" crr $end
$var wire 1 `" temp1 $end
$var wire 1 a" temp2 $end
$var wire 1 b" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[17] $end
$var parameter 6 c" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 d" a $end
$var wire 1 e" b $end
$var wire 1 f" cin $end
$var wire 1 g" cout $end
$var wire 1 h" crr $end
$var wire 1 i" temp1 $end
$var wire 1 j" temp2 $end
$var wire 1 k" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[18] $end
$var parameter 6 l" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 m" a $end
$var wire 1 n" b $end
$var wire 1 o" cin $end
$var wire 1 p" cout $end
$var wire 1 q" crr $end
$var wire 1 r" temp1 $end
$var wire 1 s" temp2 $end
$var wire 1 t" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[19] $end
$var parameter 6 u" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 v" a $end
$var wire 1 w" b $end
$var wire 1 x" cin $end
$var wire 1 y" cout $end
$var wire 1 z" crr $end
$var wire 1 {" temp1 $end
$var wire 1 |" temp2 $end
$var wire 1 }" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[20] $end
$var parameter 6 ~" i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 !# a $end
$var wire 1 "# b $end
$var wire 1 ## cin $end
$var wire 1 $# cout $end
$var wire 1 %# crr $end
$var wire 1 &# temp1 $end
$var wire 1 '# temp2 $end
$var wire 1 (# temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[21] $end
$var parameter 6 )# i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 *# a $end
$var wire 1 +# b $end
$var wire 1 ,# cin $end
$var wire 1 -# cout $end
$var wire 1 .# crr $end
$var wire 1 /# temp1 $end
$var wire 1 0# temp2 $end
$var wire 1 1# temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[22] $end
$var parameter 6 2# i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 3# a $end
$var wire 1 4# b $end
$var wire 1 5# cin $end
$var wire 1 6# cout $end
$var wire 1 7# crr $end
$var wire 1 8# temp1 $end
$var wire 1 9# temp2 $end
$var wire 1 :# temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[23] $end
$var parameter 6 ;# i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 <# a $end
$var wire 1 =# b $end
$var wire 1 ># cin $end
$var wire 1 ?# cout $end
$var wire 1 @# crr $end
$var wire 1 A# temp1 $end
$var wire 1 B# temp2 $end
$var wire 1 C# temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[24] $end
$var parameter 6 D# i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 E# a $end
$var wire 1 F# b $end
$var wire 1 G# cin $end
$var wire 1 H# cout $end
$var wire 1 I# crr $end
$var wire 1 J# temp1 $end
$var wire 1 K# temp2 $end
$var wire 1 L# temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[25] $end
$var parameter 6 M# i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 N# a $end
$var wire 1 O# b $end
$var wire 1 P# cin $end
$var wire 1 Q# cout $end
$var wire 1 R# crr $end
$var wire 1 S# temp1 $end
$var wire 1 T# temp2 $end
$var wire 1 U# temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[26] $end
$var parameter 6 V# i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 W# a $end
$var wire 1 X# b $end
$var wire 1 Y# cin $end
$var wire 1 Z# cout $end
$var wire 1 [# crr $end
$var wire 1 \# temp1 $end
$var wire 1 ]# temp2 $end
$var wire 1 ^# temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[27] $end
$var parameter 6 _# i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 `# a $end
$var wire 1 a# b $end
$var wire 1 b# cin $end
$var wire 1 c# cout $end
$var wire 1 d# crr $end
$var wire 1 e# temp1 $end
$var wire 1 f# temp2 $end
$var wire 1 g# temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[28] $end
$var parameter 6 h# i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 i# a $end
$var wire 1 j# b $end
$var wire 1 k# cin $end
$var wire 1 l# cout $end
$var wire 1 m# crr $end
$var wire 1 n# temp1 $end
$var wire 1 o# temp2 $end
$var wire 1 p# temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[29] $end
$var parameter 6 q# i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 r# a $end
$var wire 1 s# b $end
$var wire 1 t# cin $end
$var wire 1 u# cout $end
$var wire 1 v# crr $end
$var wire 1 w# temp1 $end
$var wire 1 x# temp2 $end
$var wire 1 y# temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[30] $end
$var parameter 6 z# i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 {# a $end
$var wire 1 |# b $end
$var wire 1 }# cin $end
$var wire 1 ~# cout $end
$var wire 1 !$ crr $end
$var wire 1 "$ temp1 $end
$var wire 1 #$ temp2 $end
$var wire 1 $$ temp3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin temp[31] $end
$var parameter 6 %$ i $end
$scope begin genblk1 $end
$scope module uut $end
$var wire 1 &$ a $end
$var wire 1 '$ b $end
$var wire 1 ($ cin $end
$var wire 1 )$ cout $end
$var wire 1 *$ crr $end
$var wire 1 +$ temp1 $end
$var wire 1 ,$ temp2 $end
$var wire 1 -$ temp3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11111 %$
b11110 z#
b11101 q#
b11100 h#
b11011 _#
b11010 V#
b11001 M#
b11000 D#
b10111 ;#
b10110 2#
b10101 )#
b10100 ~"
b10011 u"
b10010 l"
b10001 c"
b10000 Z"
b1111 Q"
b1110 H"
b1101 ?"
b1100 6"
b1011 -"
b1010 $"
b1001 y
b1000 p
b111 g
b110 ^
b101 U
b100 L
b11 C
b10 :
b1 1
b0 (
$end
#0
$dumpvars
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0:#
09#
08#
07#
06#
05#
04#
03#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
05"
04"
03"
02"
11"
00"
0/"
1."
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0#"
0""
0!"
0~
0}
0|
0{
0z
0x
0w
0v
0u
1t
0s
0r
1q
0o
0n
0m
0l
0k
0j
0i
0h
0f
0e
0d
0c
0b
0a
0`
0_
0]
0\
0[
0Z
1Y
0X
0W
1V
0T
0S
0R
0Q
1P
1O
0N
0M
0K
0J
1I
1H
0G
0F
1E
1D
0B
0A
0@
0?
1>
0=
1<
0;
09
08
07
06
05
04
03
02
00
0/
0.
0-
1,
0+
0*
1)
b100100110101 '
b10000 &
b1100 %
b100100101001 $
b1100 #
b100100101001 "
b100100110101 !
$end
#5000
1}
1|
1u
0t
1w
1s
1l
1n
1j
1c
1e
1a
1Z
1A
1B
1G
0P
0Y
1\
1=
1F
0O
1X
16
1?
0H
b1111101100 &
1Q
0T
17
1>
1@
0I
1R
0S
0b
0k
b1000001101 !
b1000001101 '
01"
1*
13
0E
1N
0)
12
1;
0D
1M
1_
1h
0."
b10111 #
b10111 %
b111110110 "
b111110110 $
#10000
0G
1P
0\
0n
0}
1("
1:"
1L"
1^"
1p"
1$#
16#
1H#
1Z#
1l#
1~#
0F
1O
0X
0j
0|
1'"
19"
1K"
1]"
1o"
1##
15#
1G#
1Y#
1k#
1}#
0?
1H
0Q
0c
0u
1~
12"
1D"
1V"
1h"
1z"
1.#
1@#
1R#
1d#
1v#
b101010101010101010101010101010100 &
1*$
0,
0B
0K
0Y
1[
0]
0k
1m
0o
0#"
0@
0A
1I
0J
0R
1b
0e
b1010101010101010101010101010100 !
b1010101010101010101010101010100 '
1t
0w
1!"
0""
13"
1E"
1W"
1i"
1{"
1/#
1A#
1S#
1e#
1w#
1+$
0*
0<
1E
0N
1W
1i
1{
1/"
1A"
1S"
1e"
1w"
1+#
1=#
1O#
1a#
1s#
1'$
0;
1D
0M
0_
0q
1z
1."
1@"
1R"
1d"
1v"
1*#
1<#
1N#
1`#
1r#
1&$
b10101010101010101010101010101010 #
b10101010101010101010101010101010 %
b10101010101010101010101010101010 "
b10101010101010101010101010101010 $
#15000
0>
0P
0b
0t
0("
0:"
0L"
0^"
0p"
0$#
06#
0H#
0Z#
0l#
0~#
0=
0O
0a
0s
0'"
09"
0K"
0]"
0o"
0##
05#
0G#
0Y#
0k#
0}#
06
0H
0Z
0l
0~
02"
0D"
0V"
0h"
0z"
0.#
0@#
0R#
0d#
0v#
b0 &
0*$
15
07
1G
0I
1Y
0[
1k
0m
1}
0!"
11"
03"
1C"
0E"
1U"
0W"
1g"
0i"
1y"
0{"
1-#
0/#
1?#
0A#
1Q#
0S#
1c#
0e#
1u#
0w#
b10101010101010101010101010101010 !
b10101010101010101010101010101010 '
1)$
0+$
02
0D
0V
0h
0z
0."
0@"
0R"
0d"
0v"
0*#
0<#
0N#
0`#
0r#
0&$
b0 "
b0 $
#20000
