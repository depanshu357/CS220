$date
	Sat Jan 14 14:43:01 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module bit_32_subtr_tb $end
$var wire 32 ! cout [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$scope module uut $end
$var wire 32 $ a [31:0] $end
$var wire 32 % b [31:0] $end
$var wire 32 & cout [31:0] $end
$var wire 33 ' brrOut [32:0] $end
$scope begin genblk1[0] $end
$var parameter 2 ( i $end
$scope module uut $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + brr $end
$var wire 1 , cin $end
$var wire 1 - cout $end
$var wire 1 . temp1 $end
$var wire 1 / temp2 $end
$var wire 1 0 temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 1 i $end
$scope module uut $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 brr $end
$var wire 1 5 cin $end
$var wire 1 6 cout $end
$var wire 1 7 temp1 $end
$var wire 1 8 temp2 $end
$var wire 1 9 temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 : i $end
$scope module uut $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = brr $end
$var wire 1 > cin $end
$var wire 1 ? cout $end
$var wire 1 @ temp1 $end
$var wire 1 A temp2 $end
$var wire 1 B temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 C i $end
$scope module uut $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F brr $end
$var wire 1 G cin $end
$var wire 1 H cout $end
$var wire 1 I temp1 $end
$var wire 1 J temp2 $end
$var wire 1 K temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 L i $end
$scope module uut $end
$var wire 1 M a $end
$var wire 1 N b $end
$var wire 1 O brr $end
$var wire 1 P cin $end
$var wire 1 Q cout $end
$var wire 1 R temp1 $end
$var wire 1 S temp2 $end
$var wire 1 T temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 U i $end
$scope module uut $end
$var wire 1 V a $end
$var wire 1 W b $end
$var wire 1 X brr $end
$var wire 1 Y cin $end
$var wire 1 Z cout $end
$var wire 1 [ temp1 $end
$var wire 1 \ temp2 $end
$var wire 1 ] temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 ^ i $end
$scope module uut $end
$var wire 1 _ a $end
$var wire 1 ` b $end
$var wire 1 a brr $end
$var wire 1 b cin $end
$var wire 1 c cout $end
$var wire 1 d temp1 $end
$var wire 1 e temp2 $end
$var wire 1 f temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 g i $end
$scope module uut $end
$var wire 1 h a $end
$var wire 1 i b $end
$var wire 1 j brr $end
$var wire 1 k cin $end
$var wire 1 l cout $end
$var wire 1 m temp1 $end
$var wire 1 n temp2 $end
$var wire 1 o temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 p i $end
$scope module uut $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 s brr $end
$var wire 1 t cin $end
$var wire 1 u cout $end
$var wire 1 v temp1 $end
$var wire 1 w temp2 $end
$var wire 1 x temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 y i $end
$scope module uut $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | brr $end
$var wire 1 } cin $end
$var wire 1 ~ cout $end
$var wire 1 !" temp1 $end
$var wire 1 "" temp2 $end
$var wire 1 #" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 $" i $end
$scope module uut $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 '" brr $end
$var wire 1 (" cin $end
$var wire 1 )" cout $end
$var wire 1 *" temp1 $end
$var wire 1 +" temp2 $end
$var wire 1 ," temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 -" i $end
$scope module uut $end
$var wire 1 ." a $end
$var wire 1 /" b $end
$var wire 1 0" brr $end
$var wire 1 1" cin $end
$var wire 1 2" cout $end
$var wire 1 3" temp1 $end
$var wire 1 4" temp2 $end
$var wire 1 5" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 6" i $end
$scope module uut $end
$var wire 1 7" a $end
$var wire 1 8" b $end
$var wire 1 9" brr $end
$var wire 1 :" cin $end
$var wire 1 ;" cout $end
$var wire 1 <" temp1 $end
$var wire 1 =" temp2 $end
$var wire 1 >" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 ?" i $end
$scope module uut $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 B" brr $end
$var wire 1 C" cin $end
$var wire 1 D" cout $end
$var wire 1 E" temp1 $end
$var wire 1 F" temp2 $end
$var wire 1 G" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 H" i $end
$scope module uut $end
$var wire 1 I" a $end
$var wire 1 J" b $end
$var wire 1 K" brr $end
$var wire 1 L" cin $end
$var wire 1 M" cout $end
$var wire 1 N" temp1 $end
$var wire 1 O" temp2 $end
$var wire 1 P" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 Q" i $end
$scope module uut $end
$var wire 1 R" a $end
$var wire 1 S" b $end
$var wire 1 T" brr $end
$var wire 1 U" cin $end
$var wire 1 V" cout $end
$var wire 1 W" temp1 $end
$var wire 1 X" temp2 $end
$var wire 1 Y" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 Z" i $end
$scope module uut $end
$var wire 1 [" a $end
$var wire 1 \" b $end
$var wire 1 ]" brr $end
$var wire 1 ^" cin $end
$var wire 1 _" cout $end
$var wire 1 `" temp1 $end
$var wire 1 a" temp2 $end
$var wire 1 b" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 c" i $end
$scope module uut $end
$var wire 1 d" a $end
$var wire 1 e" b $end
$var wire 1 f" brr $end
$var wire 1 g" cin $end
$var wire 1 h" cout $end
$var wire 1 i" temp1 $end
$var wire 1 j" temp2 $end
$var wire 1 k" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 l" i $end
$scope module uut $end
$var wire 1 m" a $end
$var wire 1 n" b $end
$var wire 1 o" brr $end
$var wire 1 p" cin $end
$var wire 1 q" cout $end
$var wire 1 r" temp1 $end
$var wire 1 s" temp2 $end
$var wire 1 t" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 u" i $end
$scope module uut $end
$var wire 1 v" a $end
$var wire 1 w" b $end
$var wire 1 x" brr $end
$var wire 1 y" cin $end
$var wire 1 z" cout $end
$var wire 1 {" temp1 $end
$var wire 1 |" temp2 $end
$var wire 1 }" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 ~" i $end
$scope module uut $end
$var wire 1 !# a $end
$var wire 1 "# b $end
$var wire 1 ## brr $end
$var wire 1 $# cin $end
$var wire 1 %# cout $end
$var wire 1 &# temp1 $end
$var wire 1 '# temp2 $end
$var wire 1 (# temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 )# i $end
$scope module uut $end
$var wire 1 *# a $end
$var wire 1 +# b $end
$var wire 1 ,# brr $end
$var wire 1 -# cin $end
$var wire 1 .# cout $end
$var wire 1 /# temp1 $end
$var wire 1 0# temp2 $end
$var wire 1 1# temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 2# i $end
$scope module uut $end
$var wire 1 3# a $end
$var wire 1 4# b $end
$var wire 1 5# brr $end
$var wire 1 6# cin $end
$var wire 1 7# cout $end
$var wire 1 8# temp1 $end
$var wire 1 9# temp2 $end
$var wire 1 :# temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 ;# i $end
$scope module uut $end
$var wire 1 <# a $end
$var wire 1 =# b $end
$var wire 1 ># brr $end
$var wire 1 ?# cin $end
$var wire 1 @# cout $end
$var wire 1 A# temp1 $end
$var wire 1 B# temp2 $end
$var wire 1 C# temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 D# i $end
$scope module uut $end
$var wire 1 E# a $end
$var wire 1 F# b $end
$var wire 1 G# brr $end
$var wire 1 H# cin $end
$var wire 1 I# cout $end
$var wire 1 J# temp1 $end
$var wire 1 K# temp2 $end
$var wire 1 L# temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 M# i $end
$scope module uut $end
$var wire 1 N# a $end
$var wire 1 O# b $end
$var wire 1 P# brr $end
$var wire 1 Q# cin $end
$var wire 1 R# cout $end
$var wire 1 S# temp1 $end
$var wire 1 T# temp2 $end
$var wire 1 U# temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 V# i $end
$scope module uut $end
$var wire 1 W# a $end
$var wire 1 X# b $end
$var wire 1 Y# brr $end
$var wire 1 Z# cin $end
$var wire 1 [# cout $end
$var wire 1 \# temp1 $end
$var wire 1 ]# temp2 $end
$var wire 1 ^# temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 _# i $end
$scope module uut $end
$var wire 1 `# a $end
$var wire 1 a# b $end
$var wire 1 b# brr $end
$var wire 1 c# cin $end
$var wire 1 d# cout $end
$var wire 1 e# temp1 $end
$var wire 1 f# temp2 $end
$var wire 1 g# temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 h# i $end
$scope module uut $end
$var wire 1 i# a $end
$var wire 1 j# b $end
$var wire 1 k# brr $end
$var wire 1 l# cin $end
$var wire 1 m# cout $end
$var wire 1 n# temp1 $end
$var wire 1 o# temp2 $end
$var wire 1 p# temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 q# i $end
$scope module uut $end
$var wire 1 r# a $end
$var wire 1 s# b $end
$var wire 1 t# brr $end
$var wire 1 u# cin $end
$var wire 1 v# cout $end
$var wire 1 w# temp1 $end
$var wire 1 x# temp2 $end
$var wire 1 y# temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 z# i $end
$scope module uut $end
$var wire 1 {# a $end
$var wire 1 |# b $end
$var wire 1 }# brr $end
$var wire 1 ~# cin $end
$var wire 1 !$ cout $end
$var wire 1 "$ temp1 $end
$var wire 1 #$ temp2 $end
$var wire 1 $$ temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 %$ i $end
$scope module uut $end
$var wire 1 &$ a $end
$var wire 1 '$ b $end
$var wire 1 ($ brr $end
$var wire 1 )$ cin $end
$var wire 1 *$ cout $end
$var wire 1 +$ temp1 $end
$var wire 1 ,$ temp2 $end
$var wire 1 -$ temp3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11111 %$
b11110 z#
b11101 q#
b11100 h#
b11011 _#
b11010 V#
b11001 M#
b11000 D#
b10111 ;#
b10110 2#
b10101 )#
b10100 ~"
b10011 u"
b10010 l"
b10001 c"
b10000 Z"
b1111 Q"
b1110 H"
b1101 ?"
b1100 6"
b1011 -"
b1010 $"
b1001 y
b1000 p
b111 g
b110 ^
b101 U
b100 L
b11 C
b10 :
b1 1
b0 (
$end
#0
$dumpvars
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0:#
09#
08#
07#
06#
05#
04#
03#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
05"
04"
03"
02"
01"
00"
0/"
0."
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0#"
0""
0!"
0~
0}
0|
0{
0z
0x
0w
0v
0u
0t
0s
0r
0q
0o
0n
0m
0l
0k
0j
0i
0h
0f
0e
0d
0c
0b
0a
0`
0_
0]
0\
0[
0Z
0Y
0X
1W
1V
0T
0S
0R
1Q
0P
0O
0N
1M
0K
0J
0I
0H
0G
0F
0E
0D
0B
0A
0@
1?
0>
0=
0<
1;
09
08
07
06
05
04
03
02
00
0/
0.
0-
0,
0+
0*
0)
b0 '
b10100 &
b100000 %
b110100 $
b100000 #
b110100 "
b10100 !
$end
#5
0Q
1P
b10000 '
1F
0?
b1000 !
b1000 &
1H
1J
1*
1<
1E
1)
b101101 #
b101101 %
b110101 "
b110101 $
#10
1($
1*$
1-$
1)$
1}#
1!$
1$$
1~#
1t#
1v#
1y#
1u#
1k#
1m#
1p#
1l#
1b#
1d#
1g#
1c#
1Y#
1[#
1^#
1Z#
1P#
1R#
1U#
1Q#
1G#
1I#
1L#
1H#
1>#
1@#
1C#
1?#
15#
17#
1:#
16#
1,#
1.#
11#
1-#
1##
1%#
1(#
1$#
1x"
1z"
1}"
1y"
1o"
1q"
1t"
1p"
1f"
1h"
1k"
1g"
1]"
1_"
1b"
1^"
1T"
1V"
1Y"
1U"
1K"
1M"
1P"
1L"
1B"
1D"
1G"
1C"
19"
1;"
1>"
1:"
10"
12"
15"
11"
1'"
1)"
1,"
1("
1|
1~
1#"
1}
1s
1u
1x
1t
1j
1I
1l
1o
1G
1k
1=
1a
1?
1B
1c
1f
1>
1b
14
1X
16
19
1Z
1[
15
1P
1Y
1+
1F
b111111111111111111111111111111110 '
1O
1/
0J
1T
1-
1H
b11111111111111111111111111111111 !
b11111111111111111111111111111111 &
1Q
0<
0)
0;
1D
0M
b101001 #
b101001 %
b101000 "
b101000 $
#15
